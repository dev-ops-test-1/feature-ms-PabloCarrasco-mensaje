name: CI

on:
  
  push:
  workflow_dispatch:

jobs:
  
  build:
    
    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v3

      - name: Build
        run: |
          chmod +x gradlew
          ./gradlew build
          ls -lt $GITHUB_WORKSPACE/build/libs/
          ls -ltr
          
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
         username: ${{ secrets.DOCKER_USERNAME }}
         password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Copy JAR
        run: |
          cp $GITHUB_WORKSPACE/build/libs/testing-web-0.0.1-SNAPSHOT.jar .
          chmod 777 testing-web-0.0.1-SNAPSHOT.jar
          ls -lt

      - name: Docker Build
        run: |
          docker build --tag inventore/feature .
          docker images

      - name: Docker Push
        run: |
          docker push inventore/feature

  code-review:
    runs-on: ubuntu-latest
    needs: build
    steps:
    
      - uses: actions/checkout@v3

      - name: Test
        run: |
          chmod +x gradlew
          ./gradlew test
          
      - name: Jacoco
        run: |
          chmod +x gradlew
          ./gradlew jacocoTestReport
          
      - name: SonarCloud Analysis
        run: |
          chmod +x gradlew 
          ./gradlew build sonar -Dsonar.token=${{ secrets.TOKEN_SONARCLOUD }}

      - name: SonarQube Quality Gate Check
        uses: sonarsource/sonarqube-quality-gate-action@master
        env: 
          SONAR_TOKEN: ${{ secrets.TOKEN_SONARCLOUD }}
          SONAR_HOST_URL: https://sonarcloud.io
          SONAR_QUALITYGATE: 'Sonar way2'
          wait-for-quality-gate: true
        with: 
          scanMetadataReportFile: build/sonar/report-task.txt

  deploy:
      runs-on: self-hosted
      needs: code-review
      steps: 

      - uses: actions/checkout@v3
      
      - name: Deploy Minikube
        run: |
          kubectl apply -f deployment.yml

  postman:
    name: Postman
    runs-on: self-hosted
    needs: deploy
    if: success()
    steps:
    
      - uses: actions/checkout@v3
      
      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman Tests
        run: newman run DevOpsTest1.postman_collection.json > newman-output.txt

      - name: Capture Postman
        if: success()
        uses: actions/upload-artifact@v3
        with: 
          name: newman-output.txt
          path: newman-output.txt
          if-no-files-found: error
